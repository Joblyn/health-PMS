{"ast":null,"code":"import _regeneratorRuntime from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport * as nprogress from \"nprogress\";\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport { GET_ERRORS, NO_ERRORS } from \"./Types\";\nimport { errors } from '../reducers/initialState';\nnprogress.configure({\n  showSpinner: true,\n  easing: \"ease\",\n  speed: 500\n});\nexport var getData = function getData(url, done) {\n  var endpoint = baseUrl + url;\n  nprogress.start();\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, result, action, _action;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(endpoint);\n\n            case 3:\n              response = _context.sent;\n              result = response.json();\n\n              if (result) {\n                nprogress.done();\n                nprogress.remove();\n                dispatch(done(result.data));\n                action = {\n                  type: NO_ERRORS,\n                  payload: false\n                };\n                dispatch(ErrorHandler(errors, action));\n              }\n\n              _context.next = 12;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              _action = {\n                type: NO_ERRORS,\n                payload: false\n              };\n              dispatch(ErrorHandler(errors, {\n                type: GET_ERRORS,\n                payload: _context.t0\n              }));\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/actions/services.js"],"names":["axios","nprogress","ErrorHandler","baseUrl","GET_ERRORS","NO_ERRORS","errors","configure","showSpinner","easing","speed","getData","url","done","endpoint","start","dispatch","get","response","result","json","remove","data","action","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,WAA3B;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEAL,SAAS,CAACM,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,MAAM,EAAE,MAA7B;AAAqCC,EAAAA,KAAK,EAAE;AAA5C,CAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,IAAN,EAAe;AACpC,MAAMC,QAAQ,GAAGX,OAAO,GAAGS,GAA3B;AACAX,EAAAA,SAAS,CAACc,KAAV;AACA;AAAA,wEAAO,iBAAOC,QAAP;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEoBhB,KAAK,CAACiB,GAAN,CAAUH,QAAV,CAFpB;;AAAA;AAEGI,cAAAA,QAFH;AAIGC,cAAAA,MAJH,GAIYD,QAAQ,CAACE,IAAT,EAJZ;;AAKH,kBAAID,MAAJ,EAAY;AACVlB,gBAAAA,SAAS,CAACY,IAAV;AACAZ,gBAAAA,SAAS,CAACoB,MAAV;AAEAL,gBAAAA,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACG,IAAR,CAAL,CAAR;AACIC,gBAAAA,MALM,GAKG;AAAEC,kBAAAA,IAAI,EAAEnB,SAAR;AAAmBoB,kBAAAA,OAAO,EAAE;AAA5B,iBALH;AAMVT,gBAAAA,QAAQ,CAACd,YAAY,CAACI,MAAD,EAASiB,MAAT,CAAb,CAAR;AACD;;AAZE;AAAA;;AAAA;AAAA;AAAA;AAcCA,cAAAA,OAdD,GAcU;AAAEC,gBAAAA,IAAI,EAAEnB,SAAR;AAAmBoB,gBAAAA,OAAO,EAAE;AAA5B,eAdV;AAeHT,cAAAA,QAAQ,CAACd,YAAY,CAACI,MAAD,EAAS;AAAEkB,gBAAAA,IAAI,EAAEpB,UAAR;AAAoBqB,gBAAAA,OAAO;AAA3B,eAAT,CAAb,CAAR;;AAfG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAkBD,CArBM","sourcesContent":["import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\n\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport { GET_ERRORS, NO_ERRORS } from \"./Types\";\nimport { errors } from '../reducers/initialState';\n\nnprogress.configure({ showSpinner: true, easing: \"ease\", speed: 500 });\n\nexport const getData = (url, done) => {\n  const endpoint = baseUrl + url;\n  nprogress.start();\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(endpoint);\n\n      const result = response.json();\n      if (result) {\n        nprogress.done();\n        nprogress.remove();\n\n        dispatch(done(result.data));\n        let action = { type: NO_ERRORS, payload: false };\n        dispatch(ErrorHandler(errors, action));\n      }\n    } catch (err) {\n      let action = { type: NO_ERRORS, payload: false };\n      dispatch(ErrorHandler(errors, { type: GET_ERRORS, payload: err }));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}