{"ast":null,"code":"import _toConsumableArray from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\"; // import {getSuperAdminNavItems, getDietitianNavItems, getPatientNavItems } from \"../data/sidebar-nav-items\";\n\nimport { getSuperAdminNavItems, getPatiengetPatientNavItemstNavItems, getDietitianNavItems } from '../data/sidebar-nav-items'; // let role = localStorage.getItem('role');\n\nvar _store = {\n  menuVisible: false,\n  // navItems: role === 'patient' ? getPatientNavItems() : role === 'dietitian' ? getDietitianNavItems() : role === 'admin' ?  getSuperAdminNavItems() : null,\n  navItems: getSuperAdminNavItems(),\n  DietitianNavItems: getDietitianNavItems(),\n  PatientNavItems: getPatientNavItems(),\n  formItems: [{\n    type: \"text\"\n  }]\n};\n\nvar Store = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Store, _EventEmitter);\n\n  function Store() {\n    var _this;\n\n    _classCallCheck(this, Store);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Store).call(this));\n    _this.registerToActions = _this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSidebar = _this.toggleSidebar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addFormItem = _this.addFormItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    Dispatcher.register(_this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    Dispatcher.register(_this.addFormItem.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Store, [{\n    key: \"registerToActions\",\n    value: function registerToActions(_ref) {\n      var actionType = _ref.actionType,\n          payload = _ref.payload;\n\n      switch (actionType) {\n        case Constants.TOGGLE_SIDEBAR:\n          this.toggleSidebar();\n          break;\n\n        default:\n      }\n    }\n  }, {\n    key: \"toggleSidebar\",\n    value: function toggleSidebar() {\n      _store.menuVisible = !_store.menuVisible;\n      this.emit(Constants.CHANGE);\n    }\n  }, {\n    key: \"addFormItem\",\n    value: function addFormItem(actionType, payload) {\n      // debugger;\n      switch (actionType) {\n        case Constants.ADD_ITEM:\n          _store.formItems = [].concat(_toConsumableArray(_store.formItems), [payload]);\n          break;\n\n        default:\n      }\n    } // edit\n\n  }, {\n    key: \"getFormItems\",\n    value: function getFormItems() {\n      return _store.formItems;\n    } //\n\n  }, {\n    key: \"getMenuState\",\n    value: function getMenuState() {\n      return _store.menuVisible;\n    }\n  }, {\n    key: \"getSidebarItems\",\n    value: function getSidebarItems() {\n      return _store.navItems;\n    }\n  }, {\n    key: \"getDietitianSidebarItems\",\n    value: function getDietitianSidebarItems() {\n      return _store.DietitianNavItems;\n    }\n  }, {\n    key: \"getPatientSidebarItems\",\n    value: function getPatientSidebarItems() {\n      return _store.PatientNavItems;\n    }\n  }, {\n    key: \"addChangeListener\",\n    value: function addChangeListener(callback) {\n      this.on(Constants.CHANGE, callback);\n    }\n  }, {\n    key: \"removeChangeListener\",\n    value: function removeChangeListener(callback) {\n      this.removeListener(Constants.CHANGE, callback);\n    }\n  }]);\n\n  return Store;\n}(EventEmitter);\n\nexport default new Store();","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/flux/store.js"],"names":["EventEmitter","Dispatcher","Constants","getSuperAdminNavItems","getPatiengetPatientNavItemstNavItems","getDietitianNavItems","_store","menuVisible","navItems","DietitianNavItems","PatientNavItems","getPatientNavItems","formItems","type","Store","registerToActions","bind","toggleSidebar","addFormItem","register","actionType","payload","TOGGLE_SIDEBAR","emit","CHANGE","ADD_ITEM","callback","on","removeListener"],"mappings":";;;;;;;AAAA,SAASA,YAAT,QAA6B,QAA7B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB,C,CACA;;AACA,SAAQC,qBAAR,EAA+BC,oCAA/B,EAAqEC,oBAArE,QAAiG,2BAAjG,C,CAEA;;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE,KADF;AAEX;AACAC,EAAAA,QAAQ,EAAEL,qBAAqB,EAHpB;AAIXM,EAAAA,iBAAiB,EAAEJ,oBAAoB,EAJ5B;AAKXK,EAAAA,eAAe,EAAEC,kBAAkB,EALxB;AAMXC,EAAAA,SAAS,EAAE,CAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAD;AANA,CAAb;;IASMC,K;;;AACJ,mBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,uDAAnB;AAEAf,IAAAA,UAAU,CAACkB,QAAX,CAAoB,MAAKJ,iBAAL,CAAuBC,IAAvB,uDAApB;AACAf,IAAAA,UAAU,CAACkB,QAAX,CAAoB,MAAKD,WAAL,CAAiBF,IAAjB,uDAApB;AARY;AASb;;;;4CAE0C;AAAA,UAAvBI,UAAuB,QAAvBA,UAAuB;AAAA,UAAXC,OAAW,QAAXA,OAAW;;AACzC,cAAQD,UAAR;AACE,aAAKlB,SAAS,CAACoB,cAAf;AACE,eAAKL,aAAL;AACA;;AACF;AAJF;AAMD;;;oCAEe;AACdX,MAAAA,MAAM,CAACC,WAAP,GAAqB,CAACD,MAAM,CAACC,WAA7B;AACA,WAAKgB,IAAL,CAAUrB,SAAS,CAACsB,MAApB;AACD;;;gCAEWJ,U,EAAYC,O,EAAS;AAC/B;AACA,cAAQD,UAAR;AACE,aAAKlB,SAAS,CAACuB,QAAf;AACEnB,UAAAA,MAAM,CAACM,SAAP,gCAAuBN,MAAM,CAACM,SAA9B,IAAyCS,OAAzC;AACA;;AACF;AAJF;AAMD,K,CAED;;;;mCACe;AACb,aAAOf,MAAM,CAACM,SAAd;AACD,K,CACD;;;;mCAEe;AACb,aAAON,MAAM,CAACC,WAAd;AACD;;;sCAEiB;AAChB,aAAOD,MAAM,CAACE,QAAd;AACD;;;+CAE0B;AACzB,aAAOF,MAAM,CAACG,iBAAd;AACD;;;6CAEwB;AACvB,aAAOH,MAAM,CAACI,eAAd;AACD;;;sCAEiBgB,Q,EAAU;AAC1B,WAAKC,EAAL,CAAQzB,SAAS,CAACsB,MAAlB,EAA0BE,QAA1B;AACD;;;yCAEoBA,Q,EAAU;AAC7B,WAAKE,cAAL,CAAoB1B,SAAS,CAACsB,MAA9B,EAAsCE,QAAtC;AACD;;;;EAhEiB1B,Y;;AAmEpB,eAAe,IAAIc,KAAJ,EAAf","sourcesContent":["import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\n// import {getSuperAdminNavItems, getDietitianNavItems, getPatientNavItems } from \"../data/sidebar-nav-items\";\nimport {getSuperAdminNavItems, getPatiengetPatientNavItemstNavItems, getDietitianNavItems } from '../data/sidebar-nav-items';\n\n// let role = localStorage.getItem('role');\n\nlet _store = {\n  menuVisible: false,\n  // navItems: role === 'patient' ? getPatientNavItems() : role === 'dietitian' ? getDietitianNavItems() : role === 'admin' ?  getSuperAdminNavItems() : null,\n  navItems: getSuperAdminNavItems(),\n  DietitianNavItems: getDietitianNavItems(),\n  PatientNavItems: getPatientNavItems(),\n  formItems: [{type:\"text\"}],\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.addFormItem = this.addFormItem.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n    Dispatcher.register(this.addFormItem.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  addFormItem(actionType, payload) {\n    // debugger;\n    switch (actionType) {\n      case Constants.ADD_ITEM:\n        _store.formItems = [..._store.formItems, payload];\n        break;\n      default:\n    }\n  }\n\n  // edit\n  getFormItems() {\n    return _store.formItems;\n  }\n  //\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  getDietitianSidebarItems() {\n    return _store.DietitianNavItems;\n  }\n\n  getPatientSidebarItems() {\n    return _store.PatientNavItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n"]},"metadata":{},"sourceType":"module"}