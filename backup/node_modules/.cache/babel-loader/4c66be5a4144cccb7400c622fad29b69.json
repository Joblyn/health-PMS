{"ast":null,"code":"import _slicedToArray from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joblyn/Desktop/health.workcradle/src/pages/dietician/UploadDietPlan.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Col, Row, Form, FormGroup, Button, Card, CardHeader } from \"shards-react\";\nimport PageTitle from \"../../components/common/PageTitle\";\nimport CustomFileUpload from \"../../components/components-overview/CustomFileUpload\";\nimport CustomSelect from \"../../components/components-overview/CustomSelect\";\nimport { getAllPatients } from \"../../actions/superadmin/patients\";\nimport { getPatients } from \"../../apiConstants/apiConstants\";\nexport default function UploadDietPlan() {\n  var dietitianId = JSON.parse(localStorage.getItem(\"loggedInUser\")).id;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedPatient = _useState2[0],\n      setSelectedPatient = _useState2[1];\n\n  var companyCode = localStorage.getItem(\"companyCode\");\n  var allPatients = useSelector(function (state) {\n    return state.allPatients;\n  });\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      patients = _useState4[0],\n      setPatients = _useState4[1];\n\n  var dispatch = useDispatch();\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      docName = _useState6[0],\n      setDocName = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      file = _useState8[0],\n      setFile = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      createdFor = _useState10[0],\n      setCreatedFor = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      ceatedBy = _useState12[0],\n      setBeatedBy = _useState12[1];\n\n  useEffect(function () {\n    dispatch(getAllPatients(getPatients));\n  }, []);\n  useEffect(function () {\n    setPatients(allPatients.data && allPatients.data.results.filter(function (patient) {\n      return patient.companyCode === companyCode && patient.assignedDietitian === dietitianId;\n    }));\n  }, [allPatients]);\n\n  var submitForm = function submitForm() {\n    var formData = new FormData();\n    formData.append('File', file);\n    formData.append('createdFor', createdFor);\n    formData.append('createdBy', createdBy);\n    formData.append('companyName', com);\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: \"Patient Diet Plan\",\n    subtitle: \"Dashboard\",\n    className: \"text-sm-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      maxWidth: \"506px\"\n    },\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }\n  }, \"Upload Client Diet Plan\")), /*#__PURE__*/React.createElement(Form, {\n    className: \"p-4\",\n    id: \"Upload_Diet_Plan\",\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, \"Document\"), /*#__PURE__*/React.createElement(CustomFileUpload, {\n    label: \"Document\",\n    required: true,\n    handleChange: setFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  }, \"Select Patient\"), patients && /*#__PURE__*/React.createElement(CustomSelect, {\n    label: \"Patient\",\n    options: patients,\n    setSelectedPatient: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    form: \"Upload_Diet_Plan\",\n    className: \"mt-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, \"Upload Diet Plan\")))));\n}","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/pages/dietician/UploadDietPlan.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Container","Col","Row","Form","FormGroup","Button","Card","CardHeader","PageTitle","CustomFileUpload","CustomSelect","getAllPatients","getPatients","UploadDietPlan","dietitianId","JSON","parse","localStorage","getItem","id","selectedPatient","setSelectedPatient","companyCode","allPatients","state","patients","setPatients","dispatch","docName","setDocName","file","setFile","createdFor","setCreatedFor","ceatedBy","setBeatedBy","data","results","filter","patient","assignedDietitian","submitForm","formData","FormData","append","createdBy","com","maxWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Button,\n  Card,\n  CardHeader,\n} from \"shards-react\";\n\nimport PageTitle from \"../../components/common/PageTitle\";\nimport CustomFileUpload from \"../../components/components-overview/CustomFileUpload\";\nimport CustomSelect from \"../../components/components-overview/CustomSelect\";\nimport { getAllPatients } from \"../../actions/superadmin/patients\";\nimport { getPatients } from \"../../apiConstants/apiConstants\";\n\nexport default function UploadDietPlan() {\n  let dietitianId = JSON.parse(localStorage.getItem(\"loggedInUser\")).id;\n  const [selectedPatient, setSelectedPatient] = useState();\n  let companyCode = localStorage.getItem(\"companyCode\");\n  const allPatients = useSelector((state) => state.allPatients);\n  const [patients, setPatients] = useState([]);\n  const dispatch = useDispatch();\n  const [docName, setDocName] = useState();\n  const [file, setFile] = useState();\n  const [createdFor, setCreatedFor] = useState();\n  const [ceatedBy, setBeatedBy] = useState();\n\n  useEffect(() => {\n    dispatch(getAllPatients(getPatients));\n  }, []);\n  useEffect(() => {\n    setPatients(\n      allPatients.data &&\n        allPatients.data.results.filter(\n          (patient) =>\n            patient.companyCode === companyCode &&\n            patient.assignedDietitian === dietitianId\n        )\n    );\n  }, [allPatients]);\n\n  const submitForm = () => {\n    const formData = new FormData();\n    formData.append('File', file);\n    formData.append('createdFor', createdFor);\n    formData.append('createdBy', createdBy);\n    formData.append('companyName', com)\n  }\n\n  return (\n    <Container fluid className=\"main-content-container px-4 pb-4\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          sm=\"4\"\n          title=\"Patient Diet Plan\"\n          subtitle=\"Dashboard\"\n          className=\"text-sm-left\"\n        />\n      </Row>\n      <Col className=\"p-3\">\n        <Card style={{ maxWidth: \"506px\" }} className=\"mx-auto\">\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Upload Client Diet Plan</h6>\n          </CardHeader>\n          <Form className=\"p-4\" id=\"Upload_Diet_Plan\" onSubmit={submitForm}>\n            <FormGroup className=\"mb-3\">\n              <label>Document</label>\n              <CustomFileUpload label=\"Document\" required handleChange={setFile}/>\n            </FormGroup>\n\n            <FormGroup className=\"mb-3\">\n              <label>Select Patient</label>\n              {patients && (\n                <CustomSelect\n                  label=\"Patient\"\n                  options={patients}\n                  setSelectedPatient\n                />\n              )}\n            </FormGroup>\n\n            <Button form=\"Upload_Diet_Plan\" className=\"mt-1\">\n              Upload Diet Plan\n            </Button>\n          </Form>\n        </Card>\n      </Col>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}