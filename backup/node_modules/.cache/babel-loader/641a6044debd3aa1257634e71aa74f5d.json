{"ast":null,"code":"import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport * as ActionTypes from \"./Types\";\nimport { errors } from \"../reducers/initialState\";\nnprogress.configure({\n  showSpinner: false,\n  easing: \"ease\",\n  speed: 500\n}); // export const getData = (url, done) => {\n//   const endpoint = baseUrl + url;\n//   nprogress.start();\n//   return async (dispatch) => {\n//     try {\n//       const response = await axios.get(endpoint);\n//       const result = response.json();\n//       if (result) {\n//         nprogress.done();\n//         nprogress.remove();\n//         dispatch(done(result.data));\n//         let action = { type: NO_ERRORS, payload: false };\n//         dispatch(ErrorHandler(errors, action));\n//       }\n//     } catch (err) {\n//       nprogress.done();\n//       nprogress.remove();\n//       let action = { type: GET_ERRORS, payload: err };\n//       dispatch(ErrorHandler(errors, action));\n//     }\n//   };\n// };\n\nexport var getData = function getData(url, done) {\n  var endpoint = baseUrl + url;\n  nprogress.start();\n  return function (dispatch) {\n    fetch(endpoint, {\n      method: \"GET\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      nprogress.done();\n      nprogress.remove();\n      dispatch(done(data));\n      var action = {\n        type: ActionTypes.NO_ERRORS,\n        payload: false\n      };\n      dispatch(ErrorHandler(errors, action));\n    }).catch(function (err) {\n      nprogress.done();\n      nprogress.remove();\n      var action = {\n        type: ActionTypes.GET_ERRORS,\n        payload: err\n      };\n      dispatch(ErrorHandler(onErrors(ActionTypes.GET_ERRORS, err)));\n    });\n  };\n};","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/actions/services.js"],"names":["axios","nprogress","ErrorHandler","baseUrl","ActionTypes","errors","configure","showSpinner","easing","speed","getData","url","done","endpoint","start","dispatch","fetch","method","then","res","json","data","remove","action","type","NO_ERRORS","payload","catch","err","GET_ERRORS","onErrors"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,WAA3B;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,SAA7B;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEAJ,SAAS,CAACK,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE,KAAf;AAAsBC,EAAAA,MAAM,EAAE,MAA9B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAApB,E,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,IAAN,EAAe;AACpC,MAAMC,QAAQ,GAAGV,OAAO,GAAGQ,GAA3B;AACAV,EAAAA,SAAS,CAACa,KAAV;AACA,SAAO,UAACC,QAAD,EAAc;AACnBC,IAAAA,KAAK,CAACH,QAAD,EAAW;AACdI,MAAAA,MAAM,EAAE;AADM,KAAX,CAAL,CAGGC,IAHH,CAGQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAHR,EAIGF,IAJH,CAIQ,UAACG,IAAD,EAAU;AACdpB,MAAAA,SAAS,CAACW,IAAV;AACAX,MAAAA,SAAS,CAACqB,MAAV;AACAP,MAAAA,QAAQ,CAACH,IAAI,CAACS,IAAD,CAAL,CAAR;AAEA,UAAIE,MAAM,GAAG;AAAEC,QAAAA,IAAI,EAAEpB,WAAW,CAACqB,SAApB;AAA+BC,QAAAA,OAAO,EAAE;AAAxC,OAAb;AACAX,MAAAA,QAAQ,CAACb,YAAY,CAACG,MAAD,EAASkB,MAAT,CAAb,CAAR;AACD,KAXH,EAYGI,KAZH,CAYS,UAACC,GAAD,EAAS;AACd3B,MAAAA,SAAS,CAACW,IAAV;AACAX,MAAAA,SAAS,CAACqB,MAAV;AAEA,UAAIC,MAAM,GAAG;AAAEC,QAAAA,IAAI,EAAEpB,WAAW,CAACyB,UAApB;AAAgCH,QAAAA,OAAO,EAAEE;AAAzC,OAAb;AACAb,MAAAA,QAAQ,CAACb,YAAY,CAAC4B,QAAQ,CAAC1B,WAAW,CAACyB,UAAb,EAAyBD,GAAzB,CAAT,CAAb,CAAR;AACD,KAlBH;AAmBD,GApBD;AAqBD,CAxBM","sourcesContent":["import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\n\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport * as ActionTypes from \"./Types\";\nimport { errors } from \"../reducers/initialState\";\n\nnprogress.configure({ showSpinner: false, easing: \"ease\", speed: 500 });\n\n// export const getData = (url, done) => {\n//   const endpoint = baseUrl + url;\n//   nprogress.start();\n//   return async (dispatch) => {\n//     try {\n//       const response = await axios.get(endpoint);\n\n//       const result = response.json();\n//       if (result) {\n//         nprogress.done();\n//         nprogress.remove();\n\n//         dispatch(done(result.data));\n//         let action = { type: NO_ERRORS, payload: false };\n//         dispatch(ErrorHandler(errors, action));\n//       }\n//     } catch (err) {\n//       nprogress.done();\n//       nprogress.remove();\n\n//       let action = { type: GET_ERRORS, payload: err };\n//       dispatch(ErrorHandler(errors, action));\n//     }\n//   };\n// };\n\nexport const getData = (url, done) => {\n  const endpoint = baseUrl + url;\n  nprogress.start();\n  return (dispatch) => {\n    fetch(endpoint, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        nprogress.done();\n        nprogress.remove();\n        dispatch(done(data));\n        \n        let action = { type: ActionTypes.NO_ERRORS, payload: false };\n        dispatch(ErrorHandler(errors, action));\n      })\n      .catch((err) => {\n        nprogress.done();\n        nprogress.remove();\n\n        let action = { type: ActionTypes.GET_ERRORS, payload: err };\n        dispatch(ErrorHandler(onErrors(ActionTypes.GET_ERRORS, err)));\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}