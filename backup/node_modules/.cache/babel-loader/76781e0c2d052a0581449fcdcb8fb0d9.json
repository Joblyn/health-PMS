{"ast":null,"code":"import _regeneratorRuntime from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport axios from \"axios\";\nimport * as nprogress from \"nprogress\";\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport { GET_ERRORS, NO_ERRORS } from \"./Types\";\nnprogress.configure({\n  showSpinner: true,\n  easing: \"ease\",\n  speed: 500\n});\nexport var getData = function getData(url, done) {\n  var endpoint = baseUrl + url;\n  nprogress.start();\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      var response, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return axios.get(endpoint);\n\n            case 3:\n              response = _context.sent;\n              result = response.json();\n\n              if (result) {\n                nprogress.done();\n                nprogress.remove();\n                dispatch(done(result.data));\n                dispatch(ErrorHandler({\n                  type: NO_ERRORS,\n                  payload: false\n                }));\n              }\n\n              _context.next = 11;\n              break;\n\n            case 8:\n              _context.prev = 8;\n              _context.t0 = _context[\"catch\"](0);\n              dispatch(ErrorHandler({\n                type: GET_ERRORS,\n                payload: _context.t0\n              }));\n\n            case 11:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 8]]);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/actions/services.js"],"names":["axios","nprogress","ErrorHandler","baseUrl","GET_ERRORS","NO_ERRORS","configure","showSpinner","easing","speed","getData","url","done","endpoint","start","dispatch","get","response","result","json","remove","data","type","payload"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,WAA3B;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AAEAJ,SAAS,CAACK,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE,IAAf;AAAqBC,EAAAA,MAAM,EAAE,MAA7B;AAAqCC,EAAAA,KAAK,EAAE;AAA5C,CAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,IAAN,EAAe;AACpC,MAAMC,QAAQ,GAAGV,OAAO,GAAGQ,GAA3B;AACAV,EAAAA,SAAS,CAACa,KAAV;AACA;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAEoBf,KAAK,CAACgB,GAAN,CAAUH,QAAV,CAFpB;;AAAA;AAEGI,cAAAA,QAFH;AAIGC,cAAAA,MAJH,GAIYD,QAAQ,CAACE,IAAT,EAJZ;;AAKH,kBAAID,MAAJ,EAAY;AACVjB,gBAAAA,SAAS,CAACW,IAAV;AACAX,gBAAAA,SAAS,CAACmB,MAAV;AAEAL,gBAAAA,QAAQ,CAACH,IAAI,CAACM,MAAM,CAACG,IAAR,CAAL,CAAR;AACAN,gBAAAA,QAAQ,CAACb,YAAY,CAAC;AAAEoB,kBAAAA,IAAI,EAAEjB,SAAR;AAAmBkB,kBAAAA,OAAO,EAAE;AAA5B,iBAAD,CAAb,CAAR;AACD;;AAXE;AAAA;;AAAA;AAAA;AAAA;AAaHR,cAAAA,QAAQ,CAACb,YAAY,CAAC;AAAEoB,gBAAAA,IAAI,EAAElB,UAAR;AAAoBmB,gBAAAA,OAAO;AAA3B,eAAD,CAAb,CAAR;;AAbG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAgBD,CAnBM","sourcesContent":["import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\n\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport { GET_ERRORS, NO_ERRORS } from \"./Types\";\n\nnprogress.configure({ showSpinner: true, easing: \"ease\", speed: 500 });\n\nexport const getData = (url, done) => {\n  const endpoint = baseUrl + url;\n  nprogress.start();\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(endpoint);\n\n      const result = response.json();\n      if (result) {\n        nprogress.done();\n        nprogress.remove();\n\n        dispatch(done(result.data));\n        dispatch(ErrorHandler({ type: NO_ERRORS, payload: false }));\n      }\n    } catch (err) {\n      dispatch(ErrorHandler({ type: GET_ERRORS, payload: err }));\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}