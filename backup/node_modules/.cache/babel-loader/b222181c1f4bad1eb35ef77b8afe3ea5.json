{"ast":null,"code":"// import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport * as ActionTypes from \"./Types\";\nimport onErrors from \"./errorHandler\";\nnprogress.configure({\n  showSpinner: false,\n  easing: \"ease\",\n  speed: 500\n});\nexport var getData = function getData(url, done) {\n  var endpoint = baseUrl + url;\n  nprogress.start();\n  console.log('here');\n  return function (dispatch) {\n    fetch(endpoint, {\n      method: \"GET\"\n    }).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      nprogress.done();\n      nprogress.remove();\n      dispatch(done(data));\n      dispatch(onErrors(ActionTypes.NO_ERRORS, false));\n    }).catch(function (err) {\n      nprogress.done();\n      nprogress.remove();\n      dispatch(onErrors(ActionTypes.GET_ERRORS, err));\n    });\n  };\n};\nexport var postData = function postData(url, payload, done) {\n  var endpoint = baseUrl + url;\n  nprogress.start();\n  return function (dispatch) {\n    try {\n      fetch(endpoint, {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        nprogress.done();\n        nprogress.remove();\n        console.log(data);\n        dispatch(done(data));\n        dispatch(onErrors(ActionTypes.NO_ERRORS, false));\n      }).catch(function (err) {\n        nprogress.done();\n        nprogress.remove();\n        console.log(err); // dispatch(onErrors(ActionTypes.GET_ERRORS, err));\n\n        alert('Invalid email or password.');\n      });\n    } catch (error) {\n      console.error();\n    }\n  };\n};","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/actions/services.js"],"names":["nprogress","baseUrl","ActionTypes","onErrors","configure","showSpinner","easing","speed","getData","url","done","endpoint","start","console","log","dispatch","fetch","method","then","res","json","data","remove","NO_ERRORS","catch","err","GET_ERRORS","postData","payload","body","JSON","stringify","credentials","headers","alert","error"],"mappings":"AAAA;AACA,OAAO,KAAKA,SAAZ,MAA2B,WAA3B;AAEA,SAASC,OAAT,QAAwB,8BAAxB;AACA,OAAO,KAAKC,WAAZ,MAA6B,SAA7B;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEAH,SAAS,CAACI,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE,KAAf;AAAsBC,EAAAA,MAAM,EAAE,MAA9B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAApB;AAEA,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,GAAD,EAAMC,IAAN,EAAe;AACpC,MAAMC,QAAQ,GAAGV,OAAO,GAAGQ,GAA3B;AACAT,EAAAA,SAAS,CAACY,KAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,SAAO,UAACC,QAAD,EAAc;AACnBC,IAAAA,KAAK,CAACL,QAAD,EAAW;AACdM,MAAAA,MAAM,EAAE;AADM,KAAX,CAAL,CAGGC,IAHH,CAGQ,UAACC,GAAD;AAAA,aAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,KAHR,EAIGF,IAJH,CAIQ,UAACG,IAAD,EAAU;AACdrB,MAAAA,SAAS,CAACU,IAAV;AACAV,MAAAA,SAAS,CAACsB,MAAV;AACAP,MAAAA,QAAQ,CAACL,IAAI,CAACW,IAAD,CAAL,CAAR;AAEAN,MAAAA,QAAQ,CAACZ,QAAQ,CAACD,WAAW,CAACqB,SAAb,EAAwB,KAAxB,CAAT,CAAR;AACD,KAVH,EAWGC,KAXH,CAWS,UAACC,GAAD,EAAS;AACdzB,MAAAA,SAAS,CAACU,IAAV;AACAV,MAAAA,SAAS,CAACsB,MAAV;AACAP,MAAAA,QAAQ,CAACZ,QAAQ,CAACD,WAAW,CAACwB,UAAb,EAAyBD,GAAzB,CAAT,CAAR;AACD,KAfH;AAgBD,GAjBD;AAkBD,CAtBM;AAwBP,OAAO,IAAME,QAAQ,GAAG,SAAXA,QAAW,CAAClB,GAAD,EAAMmB,OAAN,EAAelB,IAAf,EAAwB;AAC9C,MAAMC,QAAQ,GAAGV,OAAO,GAAGQ,GAA3B;AACAT,EAAAA,SAAS,CAACY,KAAV;AACA,SAAO,UAACG,QAAD,EAAc;AACnB,QAAI;AACFC,MAAAA,KAAK,CAACL,QAAD,EAAW;AACdM,QAAAA,MAAM,EAAE,MADM;AAEdY,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeH,OAAf,CAFQ;AAGdI,QAAAA,WAAW,EAAE,aAHC;AAIdC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT;AAJK,OAAX,CAAL,CAQGf,IARH,CAQQ,UAACC,GAAD;AAAA,eAASA,GAAG,CAACC,IAAJ,EAAT;AAAA,OARR,EASGF,IATH,CASQ,UAACG,IAAD,EAAU;AACdrB,QAAAA,SAAS,CAACU,IAAV;AACAV,QAAAA,SAAS,CAACsB,MAAV;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYO,IAAZ;AACAN,QAAAA,QAAQ,CAACL,IAAI,CAACW,IAAD,CAAL,CAAR;AAEAN,QAAAA,QAAQ,CAACZ,QAAQ,CAACD,WAAW,CAACqB,SAAb,EAAwB,KAAxB,CAAT,CAAR;AACD,OAhBH,EAiBGC,KAjBH,CAiBS,UAACC,GAAD,EAAS;AACdzB,QAAAA,SAAS,CAACU,IAAV;AACAV,QAAAA,SAAS,CAACsB,MAAV;AACAT,QAAAA,OAAO,CAACC,GAAR,CAAYW,GAAZ,EAHc,CAId;;AACAS,QAAAA,KAAK,CAAC,4BAAD,CAAL;AACD,OAvBH;AAwBD,KAzBD,CAyBE,OAAOC,KAAP,EAAc;AACdtB,MAAAA,OAAO,CAACsB,KAAR;AACD;AACF,GA7BD;AA8BD,CAjCM","sourcesContent":["// import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\n\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport * as ActionTypes from \"./Types\";\nimport onErrors from \"./errorHandler\";\n\nnprogress.configure({ showSpinner: false, easing: \"ease\", speed: 500 });\n\nexport const getData = (url, done) => {\n  const endpoint = baseUrl + url;\n  nprogress.start();\n  console.log('here');\n  return (dispatch) => {\n    fetch(endpoint, {\n      method: \"GET\",\n    })\n      .then((res) => res.json())\n      .then((data) => {\n        nprogress.done();\n        nprogress.remove();\n        dispatch(done(data));\n\n        dispatch(onErrors(ActionTypes.NO_ERRORS, false));\n      })\n      .catch((err) => {\n        nprogress.done();\n        nprogress.remove();\n        dispatch(onErrors(ActionTypes.GET_ERRORS, err));\n      });\n  };\n};\n\nexport const postData = (url, payload, done) => {\n  const endpoint = baseUrl + url;\n  nprogress.start();\n  return (dispatch) => {\n    try {\n      fetch(endpoint, {\n        method: \"POST\",\n        body: JSON.stringify(payload),\n        credentials: \"same-origin\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      })\n        .then((res) => res.json())\n        .then((data) => {\n          nprogress.done();\n          nprogress.remove();\n          console.log(data);\n          dispatch(done(data));\n\n          dispatch(onErrors(ActionTypes.NO_ERRORS, false));\n        })\n        .catch((err) => {\n          nprogress.done();\n          nprogress.remove();\n          console.log(err);\n          // dispatch(onErrors(ActionTypes.GET_ERRORS, err));\n          alert('Invalid email or password.')\n        });\n    } catch (error) {\n      console.error();\n    }\n  };\n};\n"]},"metadata":{},"sourceType":"module"}