{"ast":null,"code":"import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport { GET_ERRORS, NO_ERRORS } from \"./Types\";\nimport { errors } from '../reducers/initialState';\nnprogress.configure({\n  showSpinner: false,\n  easing: \"ease\",\n  speed: 500\n}); // export const getData = (url, done) => {\n//   const endpoint = baseUrl + url;\n//   nprogress.start();\n//   return async (dispatch) => {\n//     try {\n//       const response = await axios.get(endpoint);\n//       const result = response.json();\n//       if (result) {\n//         nprogress.done();\n//         nprogress.remove();\n//         dispatch(done(result.data));\n//         let action = { type: NO_ERRORS, payload: false };\n//         dispatch(ErrorHandler(errors, action));\n//       }\n//     } catch (err) {\n//       let action = { type: GET_ERRORS, payload: err };\n//       dispatch(ErrorHandler(errors, action));\n//     }\n//   };\n// };","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/actions/services.js"],"names":["axios","nprogress","ErrorHandler","baseUrl","GET_ERRORS","NO_ERRORS","errors","configure","showSpinner","easing","speed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,SAAZ,MAA2B,WAA3B;AAEA,OAAOC,YAAP,MAAyB,0BAAzB;AACA,SAASC,OAAT,QAAwB,8BAAxB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,SAAtC;AACA,SAASC,MAAT,QAAuB,0BAAvB;AAEAL,SAAS,CAACM,SAAV,CAAoB;AAAEC,EAAAA,WAAW,EAAE,KAAf;AAAsBC,EAAAA,MAAM,EAAE,MAA9B;AAAsCC,EAAAA,KAAK,EAAE;AAA7C,CAApB,E,CAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import axios from \"axios\";\nimport * as nprogress from \"nprogress\";\n\nimport ErrorHandler from \"../reducers/errorReducer\";\nimport { baseUrl } from \"../apiConstants/apiConstants\";\nimport { GET_ERRORS, NO_ERRORS } from \"./Types\";\nimport { errors } from '../reducers/initialState';\n\nnprogress.configure({ showSpinner: false, easing: \"ease\", speed: 500 });\n\n// export const getData = (url, done) => {\n//   const endpoint = baseUrl + url;\n//   nprogress.start();\n//   return async (dispatch) => {\n//     try {\n//       const response = await axios.get(endpoint);\n\n//       const result = response.json();\n//       if (result) {\n//         nprogress.done();\n//         nprogress.remove();\n\n//         dispatch(done(result.data));\n//         let action = { type: NO_ERRORS, payload: false };\n//         dispatch(ErrorHandler(errors, action));\n//       }\n//     } catch (err) {\n//       let action = { type: GET_ERRORS, payload: err };\n//       dispatch(ErrorHandler(errors, action));\n//     }\n//   };\n// };\n"]},"metadata":{},"sourceType":"module"}