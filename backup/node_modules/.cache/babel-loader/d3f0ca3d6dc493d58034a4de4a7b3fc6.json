{"ast":null,"code":"import _slicedToArray from \"/home/joblyn/Desktop/health.workcradle/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/joblyn/Desktop/health.workcradle/src/pages/dietician/UploadDietPlan.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { Container, Col, Row, Form, FormGroup, Button, Card, CardHeader } from \"shards-react\";\nimport PageTitle from \"../../components/common/PageTitle\";\nimport CustomFileUpload from \"../../components/components-overview/CustomFileUpload\";\nimport CustomSelect from \"../../components/components-overview/CustomSelect\";\nimport { getAllPatients } from \"../../actions/superadmin/patients\";\nimport { getPatients } from \"../../apiConstants/apiConstants\";\nexport default function UploadDietPlan() {\n  var dietitianId = JSON.parse(localStorage.getItem(\"loggedInUser\")).id;\n  var companyCode = localStorage.getItem(\"companyCode\");\n  var allPatients = useSelector(function (state) {\n    return state.allPatients;\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      patients = _useState2[0],\n      setPatients = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      docName = _useState4[0],\n      setDocName = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      file = _useState6[0],\n      setFile = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      createdFor = _useState8[0],\n      setCreatedFor = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isLoading = _useState10[0],\n      setiSLoading = _useState10[1];\n\n  useEffect(function () {\n    dispatch(getAllPatients(getPatients));\n  }, []);\n  useEffect(function () {\n    setPatients(allPatients.data && allPatients.data.results.filter(function (patient) {\n      return patient.companyCode === companyCode && patient.assignedDietitian === dietitianId;\n    }));\n  }, [allPatients]);\n\n  var submitForm = function submitForm() {\n    var createdBy = JSON.parse(localStorage.getItem(\"loggedInUser\")).id;\n    var formData = new FormData();\n    formData.append(\"docName\", docName);\n    formData.append(\"File\", file);\n    formData.append(\"createdFor\", createdFor);\n    formData.append(\"createdBy\", createdBy);\n    formData.append(\"companyCode\", companyCode);\n    var localUrl = \"https://dev-workcradle.herokuapp.com/api/\";\n    var prodUrl = \"https://dev-workcradle.herokuapp.com/api/\";\n    var baseUrl = process.env.NODE_ENV === 'production' ? prodURL : localURL;\n    var endpoint = baseUrl + createDocument;\n    var token = JSON.parse(localStorage.getItem('tokens')).access.token;\n    var bearerToken = 'Bearer ' + token;\n    nProgress.start();\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"main-content-container px-4 pb-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    noGutters: true,\n    className: \"page-header py-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(PageTitle, {\n    sm: \"4\",\n    title: \"Patient Diet Plan\",\n    subtitle: \"Dashboard\",\n    className: \"text-sm-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Col, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    style: {\n      maxWidth: \"506px\"\n    },\n    className: \"mx-auto\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    className: \"border-bottom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Upload Client Diet Plan\")), /*#__PURE__*/React.createElement(Form, {\n    className: \"p-4\",\n    id: \"Upload_Diet_Plan\",\n    onSubmit: submitForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  }, \"Document\"), /*#__PURE__*/React.createElement(CustomFileUpload, {\n    label: \"Document\",\n    required: true,\n    handleChange: setFile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mb-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, \"Select Patient\"), patients && /*#__PURE__*/React.createElement(CustomSelect, {\n    label: \"Patient\",\n    options: patients,\n    setSelectedPatient: setCreatedFor,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(Button, {\n    form: \"Upload_Diet_Plan\",\n    className: \"mt-1\",\n    disabled: isLoading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }\n  }, \"Upload Diet Plan\")))));\n}","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/pages/dietician/UploadDietPlan.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Container","Col","Row","Form","FormGroup","Button","Card","CardHeader","PageTitle","CustomFileUpload","CustomSelect","getAllPatients","getPatients","UploadDietPlan","dietitianId","JSON","parse","localStorage","getItem","id","companyCode","allPatients","state","patients","setPatients","dispatch","docName","setDocName","file","setFile","createdFor","setCreatedFor","isLoading","setiSLoading","data","results","filter","patient","assignedDietitian","submitForm","createdBy","formData","FormData","append","localUrl","prodUrl","baseUrl","process","env","NODE_ENV","prodURL","localURL","endpoint","createDocument","token","access","bearerToken","nProgress","start","maxWidth"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport {\n  Container,\n  Col,\n  Row,\n  Form,\n  FormGroup,\n  Button,\n  Card,\n  CardHeader,\n} from \"shards-react\";\n\nimport PageTitle from \"../../components/common/PageTitle\";\nimport CustomFileUpload from \"../../components/components-overview/CustomFileUpload\";\nimport CustomSelect from \"../../components/components-overview/CustomSelect\";\nimport { getAllPatients } from \"../../actions/superadmin/patients\";\nimport { getPatients } from \"../../apiConstants/apiConstants\";\n\nexport default function UploadDietPlan() {\n  let dietitianId = JSON.parse(localStorage.getItem(\"loggedInUser\")).id;\n  let companyCode = localStorage.getItem(\"companyCode\");\n  const allPatients = useSelector((state) => state.allPatients);\n  const [patients, setPatients] = useState([]);\n  const dispatch = useDispatch();\n  const [docName, setDocName] = useState();\n  const [file, setFile] = useState();\n  const [createdFor, setCreatedFor] = useState();\n  const [isLoading, setiSLoading] = useState(false);\n\n  useEffect(() => {\n    dispatch(getAllPatients(getPatients));\n  }, []);\n  useEffect(() => {\n    setPatients(\n      allPatients.data &&\n        allPatients.data.results.filter(\n          (patient) =>\n            patient.companyCode === companyCode &&\n            patient.assignedDietitian === dietitianId\n        )\n    );\n  }, [allPatients]);\n\n  const submitForm = () => {\n    const createdBy = JSON.parse(localStorage.getItem(\"loggedInUser\")).id;\n    const formData = new FormData();\n    formData.append(\"docName\", docName);\n    formData.append(\"File\", file);\n    formData.append(\"createdFor\", createdFor);\n    formData.append(\"createdBy\", createdBy);\n    formData.append(\"companyCode\", companyCode);\n\n    let localUrl = \"https://dev-workcradle.herokuapp.com/api/\";\n    let prodUrl = \"https://dev-workcradle.herokuapp.com/api/\";\n    let baseUrl = process.env.NODE_ENV === 'production' ? prodURL : localURL;\n    const endpoint = baseUrl + createDocument;\n    const token =  JSON.parse(localStorage.getItem('tokens')).access.token;\n    const bearerToken = 'Bearer ' + token;\n    nProgress.start();\n    \n  };\n\n  return (\n    <Container fluid className=\"main-content-container px-4 pb-4\">\n      <Row noGutters className=\"page-header py-4\">\n        <PageTitle\n          sm=\"4\"\n          title=\"Patient Diet Plan\"\n          subtitle=\"Dashboard\"\n          className=\"text-sm-left\"\n        />\n      </Row>\n      <Col className=\"p-3\">\n        <Card style={{ maxWidth: \"506px\" }} className=\"mx-auto\">\n          <CardHeader className=\"border-bottom\">\n            <h6 className=\"m-0\">Upload Client Diet Plan</h6>\n          </CardHeader>\n          <Form className=\"p-4\" id=\"Upload_Diet_Plan\" onSubmit={submitForm}>\n            <FormGroup className=\"mb-3\">\n              <label>Document</label>\n              <CustomFileUpload\n                label=\"Document\"\n                required\n                handleChange={setFile}\n              />\n            </FormGroup>\n\n            <FormGroup className=\"mb-3\">\n              <label>Select Patient</label>\n              {patients && (\n                <CustomSelect\n                  label=\"Patient\"\n                  options={patients}\n                  setSelectedPatient={setCreatedFor}\n                />\n              )}\n            </FormGroup>\n\n            <Button form=\"Upload_Diet_Plan\" className=\"mt-1\" disabled={isLoading}>\n              Upload Diet Plan\n            </Button>\n          </Form>\n        </Card>\n      </Col>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}