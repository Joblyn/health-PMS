{"ast":null,"code":"import * as ActionTypes from \"../Types\";\nimport { postData, patchDataWithToken, getDataWithToken } from \"../services\";\n\nvar onRegisterCompany = function onRegisterCompany(payload) {\n  if (payload.code) {\n    return {\n      type: ActionTypes.REGISTER_COMPANY_FAIL,\n      payload: payload\n    };\n  } else {\n    return {\n      type: ActionTypes.REGISTER_COMPANY_SUCCESS,\n      payload: payload\n    };\n  }\n};\n\nexport var registerCompany = function registerCompany(url, payload) {\n  return postData(url, payload, onRegisterCompany);\n};\n\nvar onUpdateCompanyData = function onUpdateCompanyData(payload) {\n  return {\n    type: ActionTypes.UPDATE_COMPANY_DATA,\n    payload: payload\n  };\n};\n\nexport var updateCompanyData = function updateCompanyData(url, payload) {\n  return patchDataWithToken(url, payload, onUpdateCompanyData);\n};\nexport var getAllAdmins = function getAllAdmins(url) {\n  return getDataWithToken(url, onGet);\n};","map":{"version":3,"sources":["/home/joblyn/Desktop/health.workcradle/src/actions/superadmin/authAction.js"],"names":["ActionTypes","postData","patchDataWithToken","getDataWithToken","onRegisterCompany","payload","code","type","REGISTER_COMPANY_FAIL","REGISTER_COMPANY_SUCCESS","registerCompany","url","onUpdateCompanyData","UPDATE_COMPANY_DATA","updateCompanyData","getAllAdmins","onGet"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,UAA7B;AACA,SAASC,QAAT,EAAmBC,kBAAnB,EAAuCC,gBAAvC,QAA+D,aAA/D;;AAEA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,OAAD,EAAa;AACrC,MAAGA,OAAO,CAACC,IAAX,EAAiB;AACf,WAAO;AACLC,MAAAA,IAAI,EAAEP,WAAW,CAACQ,qBADb;AAELH,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID,GALD,MAKO;AACL,WAAO;AACLE,MAAAA,IAAI,EAAEP,WAAW,CAACS,wBADb;AAELJ,MAAAA,OAAO,EAAPA;AAFK,KAAP;AAID;AACF,CAZD;;AAcA,OAAO,IAAMK,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD,EAAMN,OAAN,EAAkB;AAC/C,SAAOJ,QAAQ,CAACU,GAAD,EAAMN,OAAN,EAAeD,iBAAf,CAAf;AACD,CAFM;;AAIP,IAAMQ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACP,OAAD,EAAa;AACvC,SAAO;AACLE,IAAAA,IAAI,EAAEP,WAAW,CAACa,mBADb;AAELR,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALD;;AAOA,OAAO,IAAMS,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,GAAD,EAAMN,OAAN,EAAkB;AACjD,SAAOH,kBAAkB,CAACS,GAAD,EAAMN,OAAN,EAAeO,mBAAf,CAAzB;AACD,CAFM;AAIP,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACJ,GAAD,EAAS;AACnC,SAAOR,gBAAgB,CAACQ,GAAD,EAAMK,KAAN,CAAvB;AACD,CAFM","sourcesContent":["import * as ActionTypes from \"../Types\";\nimport { postData, patchDataWithToken, getDataWithToken } from \"../services\";\n\nconst onRegisterCompany = (payload) => {\n  if(payload.code) {\n    return {\n      type: ActionTypes.REGISTER_COMPANY_FAIL,\n      payload\n    }\n  } else {\n    return {\n      type: ActionTypes.REGISTER_COMPANY_SUCCESS,\n      payload\n    }\n  }\n};\n\nexport const registerCompany = (url, payload) => {\n  return postData(url, payload, onRegisterCompany);\n};\n\nconst onUpdateCompanyData = (payload) => {\n  return {\n    type: ActionTypes.UPDATE_COMPANY_DATA,\n    payload\n  }\n}\n\nexport const updateCompanyData = (url, payload) => {\n  return patchDataWithToken(url, payload, onUpdateCompanyData);\n}\n\nexport const getAllAdmins = (url) => {\n  return getDataWithToken(url, onGet)\n}"]},"metadata":{},"sourceType":"module"}