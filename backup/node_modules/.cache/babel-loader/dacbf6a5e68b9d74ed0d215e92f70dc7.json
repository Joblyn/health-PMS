{"ast":null,"code":"import _toConsumableArray from \"/home/joblyn/Desktop/health_sector_pms2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/joblyn/Desktop/health_sector_pms2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/joblyn/Desktop/health_sector_pms2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/joblyn/Desktop/health_sector_pms2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/joblyn/Desktop/health_sector_pms2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/joblyn/Desktop/health_sector_pms2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/joblyn/Desktop/health_sector_pms2/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport { EventEmitter } from \"events\";\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\nvar _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems(),\n  formItems: []\n};\n\nvar Store = /*#__PURE__*/function (_EventEmitter) {\n  _inherits(Store, _EventEmitter);\n\n  function Store() {\n    var _this;\n\n    _classCallCheck(this, Store);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Store).call(this));\n    _this.registerToActions = _this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.toggleSidebar = _this.toggleSidebar.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    _this.addFormItem = _this.addFormItem.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    Dispatcher.register(_this.registerToActions.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    Dispatcher.register(_this.addFormItem.bind(_assertThisInitialized(_assertThisInitialized(_this))));\n    return _this;\n  }\n\n  _createClass(Store, [{\n    key: \"registerToActions\",\n    value: function registerToActions(_ref) {\n      var actionType = _ref.actionType,\n          payload = _ref.payload;\n\n      switch (actionType) {\n        case Constants.TOGGLE_SIDEBAR:\n          this.toggleSidebar();\n          break;\n\n        default:\n      }\n    }\n  }, {\n    key: \"toggleSidebar\",\n    value: function toggleSidebar() {\n      _store.menuVisible = !_store.menuVisible;\n      this.emit(Constants.CHANGE);\n    }\n  }, {\n    key: \"addFormItem\",\n    value: function addFormItem(actionType, payload) {\n      debugger;\n\n      switch (actionType) {\n        case Constants.ADD_ITEM:\n          _store.formItems = _toConsumableArray(_store.formItems);\n\n        default:\n      }\n    } // edit\n\n  }, {\n    key: \"getFormItems\",\n    value: function getFormItems() {\n      return _store.formItems;\n    } //\n\n  }, {\n    key: \"getMenuState\",\n    value: function getMenuState() {\n      return _store.menuVisible;\n    }\n  }, {\n    key: \"getSidebarItems\",\n    value: function getSidebarItems() {\n      return _store.navItems;\n    }\n  }, {\n    key: \"addChangeListener\",\n    value: function addChangeListener(callback) {\n      this.on(Constants.CHANGE, callback);\n    }\n  }, {\n    key: \"removeChangeListener\",\n    value: function removeChangeListener(callback) {\n      this.removeListener(Constants.CHANGE, callback);\n    }\n  }]);\n\n  return Store;\n}(EventEmitter);\n\nexport default new Store();","map":{"version":3,"sources":["/home/joblyn/Desktop/health_sector_pms2/src/flux/store.js"],"names":["EventEmitter","Dispatcher","Constants","getSidebarNavItems","_store","menuVisible","navItems","formItems","Store","registerToActions","bind","toggleSidebar","addFormItem","register","actionType","payload","TOGGLE_SIDEBAR","emit","CHANGE","ADD_ITEM","callback","on","removeListener"],"mappings":";;;;;;;AAAA,SAASA,YAAT,QAA6B,QAA7B;AAEA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,kBAAP,MAA+B,2BAA/B;AAEA,IAAIC,MAAM,GAAG;AACXC,EAAAA,WAAW,EAAE,KADF;AAEXC,EAAAA,QAAQ,EAAEH,kBAAkB,EAFjB;AAGXI,EAAAA,SAAS,EAAE;AAHA,CAAb;;IAMMC,K;;;AACJ,mBAAc;AAAA;;AAAA;;AACZ;AAEA,UAAKC,iBAAL,GAAyB,MAAKA,iBAAL,CAAuBC,IAAvB,uDAAzB;AACA,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBD,IAAnB,uDAArB;AACA,UAAKE,WAAL,GAAmB,MAAKA,WAAL,CAAiBF,IAAjB,uDAAnB;AAEAT,IAAAA,UAAU,CAACY,QAAX,CAAoB,MAAKJ,iBAAL,CAAuBC,IAAvB,uDAApB;AACAT,IAAAA,UAAU,CAACY,QAAX,CAAoB,MAAKD,WAAL,CAAiBF,IAAjB,uDAApB;AARY;AASb;;;;4CAE0C;AAAA,UAAvBI,UAAuB,QAAvBA,UAAuB;AAAA,UAAXC,OAAW,QAAXA,OAAW;;AACzC,cAAQD,UAAR;AACE,aAAKZ,SAAS,CAACc,cAAf;AACE,eAAKL,aAAL;AACA;;AACF;AAJF;AAMD;;;oCAEe;AACdP,MAAAA,MAAM,CAACC,WAAP,GAAqB,CAACD,MAAM,CAACC,WAA7B;AACA,WAAKY,IAAL,CAAUf,SAAS,CAACgB,MAApB;AACD;;;gCAEWJ,U,EAAYC,O,EAAS;AAC/B;;AACA,cAAQD,UAAR;AACE,aAAKZ,SAAS,CAACiB,QAAf;AACEf,UAAAA,MAAM,CAACG,SAAP,sBACKH,MAAM,CAACG,SADZ;;AAIF;AANF;AAQD,K,CAED;;;;mCACe;AACb,aAAOH,MAAM,CAACG,SAAd;AACD,K,CACD;;;;mCAEe;AACb,aAAOH,MAAM,CAACC,WAAd;AACD;;;sCAEiB;AAChB,aAAOD,MAAM,CAACE,QAAd;AACD;;;sCAEiBc,Q,EAAU;AAC1B,WAAKC,EAAL,CAAQnB,SAAS,CAACgB,MAAlB,EAA0BE,QAA1B;AACD;;;yCAEoBA,Q,EAAU;AAC7B,WAAKE,cAAL,CAAoBpB,SAAS,CAACgB,MAA9B,EAAsCE,QAAtC;AACD;;;;EA1DiBpB,Y;;AA6DpB,eAAe,IAAIQ,KAAJ,EAAf","sourcesContent":["import { EventEmitter } from \"events\";\n\nimport Dispatcher from \"./dispatcher\";\nimport Constants from \"./constants\";\nimport getSidebarNavItems from \"../data/sidebar-nav-items\";\n\nlet _store = {\n  menuVisible: false,\n  navItems: getSidebarNavItems(),\n  formItems: [],\n};\n\nclass Store extends EventEmitter {\n  constructor() {\n    super();\n\n    this.registerToActions = this.registerToActions.bind(this);\n    this.toggleSidebar = this.toggleSidebar.bind(this);\n    this.addFormItem = this.addFormItem.bind(this);\n\n    Dispatcher.register(this.registerToActions.bind(this));\n    Dispatcher.register(this.addFormItem.bind(this));\n  }\n\n  registerToActions({ actionType, payload }) {\n    switch (actionType) {\n      case Constants.TOGGLE_SIDEBAR:\n        this.toggleSidebar();\n        break;\n      default:\n    }\n  }\n\n  toggleSidebar() {\n    _store.menuVisible = !_store.menuVisible;\n    this.emit(Constants.CHANGE);\n  }\n\n  addFormItem(actionType, payload) {\n    debugger\n    switch (actionType) {\n      case Constants.ADD_ITEM:\n        _store.formItems = [\n          ..._store.formItems,\n          \n        ];\n      default:\n    }\n  }\n\n  // edit\n  getFormItems() {\n    return _store.formItems;\n  }\n  //\n\n  getMenuState() {\n    return _store.menuVisible;\n  }\n\n  getSidebarItems() {\n    return _store.navItems;\n  }\n\n  addChangeListener(callback) {\n    this.on(Constants.CHANGE, callback);\n  }\n\n  removeChangeListener(callback) {\n    this.removeListener(Constants.CHANGE, callback);\n  }\n}\n\nexport default new Store();\n"]},"metadata":{},"sourceType":"module"}